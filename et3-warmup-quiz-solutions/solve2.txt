1- there is multiple way to create a brach:
	we can only create it by runing this comand on our cmd : git branch i-am-awesome
	we can create it and work in it in one comand :  git branch -M i-am-awesome
							or
					            git checkout -b i-am-awesome     // we normaly use checkout for branch choose but if we add '-b'
									 we can create this branch and choose it 

2-commit to a branch:
	we can use this comand n our cmd ( I prefere to use Git Bash) :  git commit -m "You are awesome"


3-push branch to github:
	first of all I prefere to setup my repository remote. it means i configure my repositry one time and i will use always the name of this remote not the  		ssh for each time i want to push a code. i run this comand : git remote add origin "ssh"
			this comand means that my ssh is givena name 'origin' . if i want to use it i can call 'origin' .
	Second if i want to push my branch to github :  i run this comand : git push -u origin i-am-awesome 

4-ignore files :
	first i have to create a file from cmd :   touch .gitignore                 //we use touch to create file and 'mkdir'  to create directory.we have to create 										this file inside the project directory.
	Second i have to add the file ignored in the file that we have just created.. for example if i want to ignore a file with name 'example.txt', we have 
								to open .gitignore and write in it 'example.txt'. we can ignore the txt file by 
								writing in it ' *.txt '
					
5-add x and y: git add x y                 //we can add them all by entering this comand :    git add .                      
									or 
								      git add -A

   comit x and y:  git commit -m "commit only x and y "


   push x and y:  git push -u origin master      //we pushed only x and y because we only added x and y so if we commit and push only these files are 					pushed.  offcoarse origin is the remote repository we disscussed it earlier.


6-pushed the wrong commit :
	first i have to enter thid comand: git log                                     // this comand will give me the history of commit comands with their proper Key
							so i copy this key to use it in the revert comand

	second i have to enter this comand:  git revert -n 'Key'      //this comand is added with '-n' because we want to make the file not committed.we can 							remove '-n'  so thechange will beremoved and cmitted automatically

	third :    :q      // this comand for closing the revert chase and ensure it 



7-if someone else pushed to my branch:

	when i pull from my github to update my folder locally, if someone has pushed on my branch i will get a sector on the change when i open my 	text editor where this text is given with a proper key

8-open a pull request:
	when i push my changes to my branch i have to merge it to the original branch ( Master for example  ) so i choose pull request and i add a 	coment for the changes

9-resolve conflicts:
	first we have to pull from the original branch : git pull origin master
	after that the git bash will show us in wich line is the conflict for the same file, so we can erase the warning and keep the two changes from the 	Vs code and after that we add the file and comit it and push it 

10-we can keep bith changes the file until we get to an agrement about them